// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace RectData {
class PictureDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PictureData> {
} _PictureData_default_instance_;
class ObjectParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ObjectParam> {
} _ObjectParam_default_instance_;

namespace protobuf_data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PictureData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PictureData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PictureData, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PictureData, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PictureData, object_parameter_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, xmin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, ymin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, xmax_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectParam, ymax_),
  ~0u,
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(PictureData)},
  { 10, 19, sizeof(ObjectParam)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PictureData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ObjectParam_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _PictureData_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ObjectParam_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PictureData_default_instance_.DefaultConstruct();
  _ObjectParam_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ndata.proto\022\010RectData\"]\n\013PictureData\022\016\n"
      "\006height\030\001 \002(\005\022\r\n\005width\030\002 \002(\005\022/\n\020object_p"
      "arameter\030\003 \003(\0132\025.RectData.ObjectParam\"R\n"
      "\013ObjectParam\022\013\n\003tag\030\001 \003(\t\022\014\n\004xmin\030\002 \002(\005\022"
      "\014\n\004ymin\030\003 \002(\005\022\014\n\004xmax\030\004 \002(\005\022\014\n\004ymax\030\005 \002("
      "\005"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 201);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PictureData::kHeightFieldNumber;
const int PictureData::kWidthFieldNumber;
const int PictureData::kObjectParameterFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PictureData::PictureData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RectData.PictureData)
}
PictureData::PictureData(const PictureData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      object_parameter_(from.object_parameter_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&height_, &from.height_,
    reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&height_) + sizeof(width_));
  // @@protoc_insertion_point(copy_constructor:RectData.PictureData)
}

void PictureData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&height_, 0, reinterpret_cast<char*>(&width_) -
    reinterpret_cast<char*>(&height_) + sizeof(width_));
}

PictureData::~PictureData() {
  // @@protoc_insertion_point(destructor:RectData.PictureData)
  SharedDtor();
}

void PictureData::SharedDtor() {
}

void PictureData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PictureData::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[0].descriptor;
}

const PictureData& PictureData::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

PictureData* PictureData::New(::google::protobuf::Arena* arena) const {
  PictureData* n = new PictureData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PictureData::Clear() {
// @@protoc_insertion_point(message_clear_start:RectData.PictureData)
  object_parameter_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&height_, 0, reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&height_) + sizeof(width_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PictureData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RectData.PictureData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .RectData.ObjectParam object_parameter = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_object_parameter()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RectData.PictureData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RectData.PictureData)
  return false;
#undef DO_
}

void PictureData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RectData.PictureData)
  // required int32 height = 1;
  if (has_height()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->height(), output);
  }

  // required int32 width = 2;
  if (has_width()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->width(), output);
  }

  // repeated .RectData.ObjectParam object_parameter = 3;
  for (unsigned int i = 0, n = this->object_parameter_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->object_parameter(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RectData.PictureData)
}

::google::protobuf::uint8* PictureData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RectData.PictureData)
  // required int32 height = 1;
  if (has_height()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->height(), target);
  }

  // required int32 width = 2;
  if (has_width()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->width(), target);
  }

  // repeated .RectData.ObjectParam object_parameter = 3;
  for (unsigned int i = 0, n = this->object_parameter_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->object_parameter(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RectData.PictureData)
  return target;
}

size_t PictureData::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RectData.PictureData)
  size_t total_size = 0;

  if (has_height()) {
    // required int32 height = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  if (has_width()) {
    // required int32 width = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  return total_size;
}
size_t PictureData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RectData.PictureData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required int32 height = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());

    // required int32 width = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .RectData.ObjectParam object_parameter = 3;
  {
    unsigned int count = this->object_parameter_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->object_parameter(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PictureData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RectData.PictureData)
  GOOGLE_DCHECK_NE(&from, this);
  const PictureData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PictureData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RectData.PictureData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RectData.PictureData)
    MergeFrom(*source);
  }
}

void PictureData::MergeFrom(const PictureData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RectData.PictureData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  object_parameter_.MergeFrom(from.object_parameter_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_height()) {
      set_height(from.height());
    }
    if (from.has_width()) {
      set_width(from.width());
    }
  }
}

void PictureData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RectData.PictureData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PictureData::CopyFrom(const PictureData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RectData.PictureData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PictureData::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->object_parameter())) return false;
  return true;
}

void PictureData::Swap(PictureData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PictureData::InternalSwap(PictureData* other) {
  object_parameter_.UnsafeArenaSwap(&other->object_parameter_);
  std::swap(height_, other->height_);
  std::swap(width_, other->width_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PictureData::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PictureData

// required int32 height = 1;
bool PictureData::has_height() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PictureData::set_has_height() {
  _has_bits_[0] |= 0x00000001u;
}
void PictureData::clear_has_height() {
  _has_bits_[0] &= ~0x00000001u;
}
void PictureData::clear_height() {
  height_ = 0;
  clear_has_height();
}
::google::protobuf::int32 PictureData::height() const {
  // @@protoc_insertion_point(field_get:RectData.PictureData.height)
  return height_;
}
void PictureData::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:RectData.PictureData.height)
}

// required int32 width = 2;
bool PictureData::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PictureData::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
void PictureData::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
void PictureData::clear_width() {
  width_ = 0;
  clear_has_width();
}
::google::protobuf::int32 PictureData::width() const {
  // @@protoc_insertion_point(field_get:RectData.PictureData.width)
  return width_;
}
void PictureData::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:RectData.PictureData.width)
}

// repeated .RectData.ObjectParam object_parameter = 3;
int PictureData::object_parameter_size() const {
  return object_parameter_.size();
}
void PictureData::clear_object_parameter() {
  object_parameter_.Clear();
}
const ::RectData::ObjectParam& PictureData::object_parameter(int index) const {
  // @@protoc_insertion_point(field_get:RectData.PictureData.object_parameter)
  return object_parameter_.Get(index);
}
::RectData::ObjectParam* PictureData::mutable_object_parameter(int index) {
  // @@protoc_insertion_point(field_mutable:RectData.PictureData.object_parameter)
  return object_parameter_.Mutable(index);
}
::RectData::ObjectParam* PictureData::add_object_parameter() {
  // @@protoc_insertion_point(field_add:RectData.PictureData.object_parameter)
  return object_parameter_.Add();
}
::google::protobuf::RepeatedPtrField< ::RectData::ObjectParam >*
PictureData::mutable_object_parameter() {
  // @@protoc_insertion_point(field_mutable_list:RectData.PictureData.object_parameter)
  return &object_parameter_;
}
const ::google::protobuf::RepeatedPtrField< ::RectData::ObjectParam >&
PictureData::object_parameter() const {
  // @@protoc_insertion_point(field_list:RectData.PictureData.object_parameter)
  return object_parameter_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectParam::kTagFieldNumber;
const int ObjectParam::kXminFieldNumber;
const int ObjectParam::kYminFieldNumber;
const int ObjectParam::kXmaxFieldNumber;
const int ObjectParam::kYmaxFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectParam::ObjectParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:RectData.ObjectParam)
}
ObjectParam::ObjectParam(const ObjectParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tag_(from.tag_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&xmin_, &from.xmin_,
    reinterpret_cast<char*>(&ymax_) -
    reinterpret_cast<char*>(&xmin_) + sizeof(ymax_));
  // @@protoc_insertion_point(copy_constructor:RectData.ObjectParam)
}

void ObjectParam::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&xmin_, 0, reinterpret_cast<char*>(&ymax_) -
    reinterpret_cast<char*>(&xmin_) + sizeof(ymax_));
}

ObjectParam::~ObjectParam() {
  // @@protoc_insertion_point(destructor:RectData.ObjectParam)
  SharedDtor();
}

void ObjectParam::SharedDtor() {
}

void ObjectParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectParam::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[1].descriptor;
}

const ObjectParam& ObjectParam::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

ObjectParam* ObjectParam::New(::google::protobuf::Arena* arena) const {
  ObjectParam* n = new ObjectParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectParam::Clear() {
// @@protoc_insertion_point(message_clear_start:RectData.ObjectParam)
  tag_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&xmin_, 0, reinterpret_cast<char*>(&ymax_) -
      reinterpret_cast<char*>(&xmin_) + sizeof(ymax_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RectData.ObjectParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string tag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag(this->tag_size() - 1).data(),
            this->tag(this->tag_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "RectData.ObjectParam.tag");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 xmin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_xmin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xmin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ymin = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ymin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ymin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 xmax = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_xmax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &xmax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 ymax = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ymax();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ymax_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RectData.ObjectParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RectData.ObjectParam)
  return false;
#undef DO_
}

void ObjectParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RectData.ObjectParam)
  // repeated string tag = 1;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RectData.ObjectParam.tag");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->tag(i), output);
  }

  // required int32 xmin = 2;
  if (has_xmin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->xmin(), output);
  }

  // required int32 ymin = 3;
  if (has_ymin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ymin(), output);
  }

  // required int32 xmax = 4;
  if (has_xmax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->xmax(), output);
  }

  // required int32 ymax = 5;
  if (has_ymax()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ymax(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:RectData.ObjectParam)
}

::google::protobuf::uint8* ObjectParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RectData.ObjectParam)
  // repeated string tag = 1;
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag(i).data(), this->tag(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "RectData.ObjectParam.tag");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->tag(i), target);
  }

  // required int32 xmin = 2;
  if (has_xmin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->xmin(), target);
  }

  // required int32 ymin = 3;
  if (has_ymin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ymin(), target);
  }

  // required int32 xmax = 4;
  if (has_xmax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->xmax(), target);
  }

  // required int32 ymax = 5;
  if (has_ymax()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ymax(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RectData.ObjectParam)
  return target;
}

size_t ObjectParam::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:RectData.ObjectParam)
  size_t total_size = 0;

  if (has_xmin()) {
    // required int32 xmin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xmin());
  }

  if (has_ymin()) {
    // required int32 ymin = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ymin());
  }

  if (has_xmax()) {
    // required int32 xmax = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xmax());
  }

  if (has_ymax()) {
    // required int32 ymax = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ymax());
  }

  return total_size;
}
size_t ObjectParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RectData.ObjectParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required int32 xmin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xmin());

    // required int32 ymin = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ymin());

    // required int32 xmax = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->xmax());

    // required int32 ymax = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ymax());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated string tag = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tag_size());
  for (int i = 0, n = this->tag_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tag(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RectData.ObjectParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RectData.ObjectParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RectData.ObjectParam)
    MergeFrom(*source);
  }
}

void ObjectParam::MergeFrom(const ObjectParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RectData.ObjectParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_.MergeFrom(from.tag_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_xmin()) {
      set_xmin(from.xmin());
    }
    if (from.has_ymin()) {
      set_ymin(from.ymin());
    }
    if (from.has_xmax()) {
      set_xmax(from.xmax());
    }
    if (from.has_ymax()) {
      set_ymax(from.ymax());
    }
  }
}

void ObjectParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RectData.ObjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectParam::CopyFrom(const ObjectParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RectData.ObjectParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectParam::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void ObjectParam::Swap(ObjectParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectParam::InternalSwap(ObjectParam* other) {
  tag_.UnsafeArenaSwap(&other->tag_);
  std::swap(xmin_, other->xmin_);
  std::swap(ymin_, other->ymin_);
  std::swap(xmax_, other->xmax_);
  std::swap(ymax_, other->ymax_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectParam::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectParam

// repeated string tag = 1;
int ObjectParam::tag_size() const {
  return tag_.size();
}
void ObjectParam::clear_tag() {
  tag_.Clear();
}
const ::std::string& ObjectParam::tag(int index) const {
  // @@protoc_insertion_point(field_get:RectData.ObjectParam.tag)
  return tag_.Get(index);
}
::std::string* ObjectParam::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:RectData.ObjectParam.tag)
  return tag_.Mutable(index);
}
void ObjectParam::set_tag(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.tag)
  tag_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void ObjectParam::set_tag(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.tag)
  tag_.Mutable(index)->assign(std::move(value));
}
#endif
void ObjectParam::set_tag(int index, const char* value) {
  tag_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:RectData.ObjectParam.tag)
}
void ObjectParam::set_tag(int index, const char* value, size_t size) {
  tag_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:RectData.ObjectParam.tag)
}
::std::string* ObjectParam::add_tag() {
  // @@protoc_insertion_point(field_add_mutable:RectData.ObjectParam.tag)
  return tag_.Add();
}
void ObjectParam::add_tag(const ::std::string& value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:RectData.ObjectParam.tag)
}
#if LANG_CXX11
void ObjectParam::add_tag(::std::string&& value) {
  tag_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:RectData.ObjectParam.tag)
}
#endif
void ObjectParam::add_tag(const char* value) {
  tag_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:RectData.ObjectParam.tag)
}
void ObjectParam::add_tag(const char* value, size_t size) {
  tag_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:RectData.ObjectParam.tag)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
ObjectParam::tag() const {
  // @@protoc_insertion_point(field_list:RectData.ObjectParam.tag)
  return tag_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
ObjectParam::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:RectData.ObjectParam.tag)
  return &tag_;
}

// required int32 xmin = 2;
bool ObjectParam::has_xmin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectParam::set_has_xmin() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectParam::clear_has_xmin() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectParam::clear_xmin() {
  xmin_ = 0;
  clear_has_xmin();
}
::google::protobuf::int32 ObjectParam::xmin() const {
  // @@protoc_insertion_point(field_get:RectData.ObjectParam.xmin)
  return xmin_;
}
void ObjectParam::set_xmin(::google::protobuf::int32 value) {
  set_has_xmin();
  xmin_ = value;
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.xmin)
}

// required int32 ymin = 3;
bool ObjectParam::has_ymin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectParam::set_has_ymin() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectParam::clear_has_ymin() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectParam::clear_ymin() {
  ymin_ = 0;
  clear_has_ymin();
}
::google::protobuf::int32 ObjectParam::ymin() const {
  // @@protoc_insertion_point(field_get:RectData.ObjectParam.ymin)
  return ymin_;
}
void ObjectParam::set_ymin(::google::protobuf::int32 value) {
  set_has_ymin();
  ymin_ = value;
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.ymin)
}

// required int32 xmax = 4;
bool ObjectParam::has_xmax() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ObjectParam::set_has_xmax() {
  _has_bits_[0] |= 0x00000004u;
}
void ObjectParam::clear_has_xmax() {
  _has_bits_[0] &= ~0x00000004u;
}
void ObjectParam::clear_xmax() {
  xmax_ = 0;
  clear_has_xmax();
}
::google::protobuf::int32 ObjectParam::xmax() const {
  // @@protoc_insertion_point(field_get:RectData.ObjectParam.xmax)
  return xmax_;
}
void ObjectParam::set_xmax(::google::protobuf::int32 value) {
  set_has_xmax();
  xmax_ = value;
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.xmax)
}

// required int32 ymax = 5;
bool ObjectParam::has_ymax() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ObjectParam::set_has_ymax() {
  _has_bits_[0] |= 0x00000008u;
}
void ObjectParam::clear_has_ymax() {
  _has_bits_[0] &= ~0x00000008u;
}
void ObjectParam::clear_ymax() {
  ymax_ = 0;
  clear_has_ymax();
}
::google::protobuf::int32 ObjectParam::ymax() const {
  // @@protoc_insertion_point(field_get:RectData.ObjectParam.ymax)
  return ymax_;
}
void ObjectParam::set_ymax(::google::protobuf::int32 value) {
  set_has_ymax();
  ymax_ = value;
  // @@protoc_insertion_point(field_set:RectData.ObjectParam.ymax)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace RectData

// @@protoc_insertion_point(global_scope)
